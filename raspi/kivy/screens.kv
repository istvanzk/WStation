#:import SlideTransition kivy.uix.screenmanager.SlideTransition
#:import cos math.cos
#:import sin math.sin
#:import radians math.radians

MyScreenManager:
    transition: SlideTransition()
    MainScreen:
    TracesScreen:
    LockScreen:

<LabelN@Label>:
    font_size: '40sp'
    color: 1,1,1,1
    outline_color: 0,0,0
    outline_width: 5
    text_size: self.size
    halign: 'center'
    valign: 'middle'
    bold: True

<LabelNE@Label>:
    font_size: '30sp'
    text_size: self.size
    color: 0.6,0.6,0.6,1
    outline_color: 0,0,0
    outline_width: 10
    halign: 'center'
    valign: 'middle'
    bold: True

<LabelInfo@Label>:
    font_size: '30sp'
    text_size: self.size
    outline_color: 0,0,1
    outline_width: 5
    halign: 'center'
    valign: 'middle'
    bold: True

<RoundedButton>:
    canvas.before:
        Color:
            rgba: self.color_rgb + [0.2] if self.state=='normal' else (.7,.7,.7,1)  # visual feedback of press
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(20),]

<MainScreen>:
    name: 'main'
    FloatLayout:
        Widget:
            size_hint: 1.0, 1.0
            pos_hint: {'x':0.0, 'y':0.0}
            canvas.before:      
                Color:
                    rgba: 0.5,0,0,0 
                Rectangle:
                    size: self.size
                    pos: self.pos

            canvas:
                Color:
                    rgb: 0,0,1
                Line:
                    width: 1.5
                    circle:
                        (self.center_x, self.center_y, dp(200), 10, 80)
                Line:
                    width: 1.5
                    circle:
                        (self.center_x, self.center_y, dp(200), 100, 170)
                Line:
                    width: 1.5
                    circle:
                        (self.center_x, self.center_y, dp(200), 190, 260)
                Line:
                    width: 1.5
                    circle:
                        (self.center_x, self.center_y, dp(200), 280, 350)

                Color:
                    hsv: root.manager._wind_speed_hue,1,1
                Ellipse:
                    pos: self.center_x-dp(2.5*root.manager._wind_speed), self.center_y-dp(2.5*root.manager._wind_speed)
                    size: dp(5*root.manager._wind_speed), dp(5*root.manager._wind_speed)
                    angle_start: root.manager._wind_direction-11.25
                    angle_end: root.manager._wind_direction+11.25
                    segments: 2    
                Ellipse:
                    pos: self.center_x-dp(10), self.center_y-dp(10)
                    size: dp(20),dp(20)
                    angle_start: 0
                    angle_end: 360

                Color: 
                    rgb: 1,1,1
                Line:
                    width: 2.
                    cap: 'round'
                    joint: 'round'
                    points: self.center_x, self.center_y, self.center_x+dp(170*cos(radians(-root.manager._wind_direction+90-11.25))), self.center_y+dp(170*sin(radians(-root.manager._wind_direction+90-11.25)))
                Line:
                    width: 2.
                    cap: 'round'
                    joint: 'round'
                    points: self.center_x, self.center_y, self.center_x+dp(170*cos(radians(-root.manager._wind_direction+90+11.25))), self.center_y+dp(170*sin(radians(-root.manager._wind_direction+90+11.25)))
 
        LabelN:
            text: 'N'
            pos: 0,dp(200)
        LabelN:
            text: 'E'
            pos: dp(200),00
        LabelN:
            text: 'S'
            pos: 0,dp(-200)
        LabelN:
            text: 'W'
            pos: dp(-200),0

        LabelNE:
            text: 'NE'
            pos: dp(140),dp(140)
        LabelNE:
            text: 'SE'
            pos: dp(140),dp(-140)
        LabelNE:
            text: 'SW'
            pos: dp(-140),dp(-140)
        LabelNE:
            text: 'NW'
            pos: -dp(140),dp(140)

        LabelInfo:
            markup: True
            text: '{:4.1f} '.format(root.manager._air_temperature) + '[sup]o[/sup]C'
            pos: dp(-300),dp(200)           
            color: root.manager._air_temperature_color + [1]

        LabelInfo:
            markup: True
            text: '{:6.1f}'.format(root.manager._air_pressure) + '[size=20]mbar[/size]'
            pos: dp(-300),dp(-200)           
            color: 0.6,0.6,0.6,1

        LabelInfo:
            markup: True
            text: '{:4.1f}'.format(root.manager._wind_speed) + '[size=20]m/s[/size]'
            pos: dp(300),dp(200)           
            color: 0.6,0.6,0.6,1

        LabelInfo:
            markup: True
            text: '{:4.1f}'.format(root.manager._air_relhumidity) + '[size=20]%[/size]'
            pos: dp(300),dp(-200)           
            color: 0.6,0.6,0.6,1

        RoundedButton:
            pos_hint: {'x':0.985, 'y':0.35}
            size_hint: 0.025, 0.30
            color_rgb: 0,0,1
            on_press: 
                root.manager.current = 'traces'
                root.manager.transition.direction = 'left'
        
        RoundedButton:
            pos_hint: {'x':-0.01, 'y':0.35}
            size_hint: 0.025, 0.30
            color_rgb: 0,1,0
            on_press:
                root.manager.current = 'lock'
                root.manager.transition.direction = 'right'
        
<TracesScreen>:
    name: 'traces'
    FloatLayout:
        canvas:
            Color:
                rgba: root.manager._air_temperature_color + [1]
            Point:
                points: root._air_temperature_points
                pointsize: 5

        RoundedButton:
            pos_hint: {'x':-0.01, 'y':0.35}
            size_hint: 0.025, 0.30
            color_rgb: 0,0,1
            on_press:
                root.manager.current = 'main'
                root.manager.transition.direction = 'right'

<LockScreen>:
    name: 'lock'
    FloatLayout:
 
        RoundedButton:
            pos_hint: {'x':0.985, 'y':0.35}
            size_hint: 0.025, 0.30
            color_rgb: 0,1,0
            on_press:
                root.manager.current = 'main'
                root.manager.transition.direction = 'left'
